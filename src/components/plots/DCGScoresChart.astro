---
export interface Props {
  name: string;
  dcgScores?: any;
}

const { name, dcgScores } = Astro.props;

// Use the provided DCG scores
const tfScores = dcgScores || {};

const chartId = `dcg-chart-${name.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;
---

<div>
  <h4 class="font-semibold text-gray-800 mb-2">Discounted Cumulative Gain in Different Assays</h4>
  <div id={chartId} style="height: 300px;"></div>
</div>

<script src="https://cdn.plot.ly/plotly-3.0.1.min.js" charset="utf-8"></script>

<script define:vars={{ chartId, tfScores, name }}>
  
  // Prepare data for DCG scores chart
  const assays = Object.keys(tfScores);
  const scores = Object.values(tfScores);
  
  const data = [{
    x: scores,
    y: assays,
    type: 'bar',
    orientation: 'h',
    marker: {
      color: '#2563eb', // Blue-600 to match the theme
      opacity: 0.8
    },
    text: scores.map(score => score.toFixed(3)),
    textposition: 'auto',
    hovertemplate: '<b>%{y}</b><br>DCG Score: %{x:.3f}<extra></extra>'
  }];
  
  const layout = {
    title: {
      text: `${name} DCG Scores by Assay`,
      font: { size: 14, color: '#374151' }
    },
    xaxis: {
      title: 'DCG Score (Discounted Cumulative Gain)',
      range: [0, Math.max(...scores) * 1.1],
      font: { size: 12 }
    },
    yaxis: {
      title: 'Assay Type',
      font: { size: 12 },
      automargin: true
    },
    margin: {
      l: 120,
      r: 30,
      t: 50,
      b: 60
    },
    plot_bgcolor: 'rgba(0,0,0,0)', // Transparent background
    paper_bgcolor: 'rgba(0,0,0,0)', // Transparent background
    showlegend: false
  };
  
  const config = {
    responsive: true,
    displayModeBar: false
  };
  
  // Create plot when the DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    const chartElement = document.getElementById(chartId);
    if (chartElement) {
      Plotly.newPlot(chartId, data, layout, config);
    }
  });
</script> 