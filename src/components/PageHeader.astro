---
export interface Props {
  title: string;
  subtitle: string;
  averageScore: number;
  assayCount: number;
  tfCount?: number;
  backLink: string;
  backText: string;
  genecardsLink?: string;
  genecardsText?: string;
}

const { 
  title, 
  subtitle, 
  averageScore, 
  assayCount, 
  tfCount,
  backLink, 
  backText,
  genecardsLink,
  genecardsText = "View on GeneCards"
} = Astro.props;
---

<div class="bg-white rounded-lg shadow-sm p-6 mb-6">
  <div class="flex items-center justify-between">
    <div>
      <h1 class="text-3xl font-bold text-gray-800">{title}</h1>
      <p class="text-gray-600 mt-2">{subtitle}</p>
    </div>
    <div class="text-right">
      <div class="text-2xl font-bold text-blue-600">{averageScore.toFixed(3)}</div>
      <div class="text-sm text-gray-500">Average Score</div>
      <div class="text-sm text-gray-500">
        ({assayCount} assay{assayCount !== 1 ? 's' : ''}{tfCount ? `, ${tfCount} TF${tfCount !== 1 ? 's' : ''}` : ''})
      </div>
    </div>
  </div>
  
  <!-- Navigation -->
  <div class="mt-6 pt-4 border-t border-gray-200">
    <a 
      href={backLink}
      class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors duration-150"
    >
      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
      </svg>
      {backText}
    </a>
    {genecardsLink && (
      <a 
        href={genecardsLink}
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center ml-6 text-gray-600 hover:text-gray-800 transition-colors duration-150"
      >
        <img src="/genecards.ico" alt="GeneCards" class="w-4 h-4 mr-2" />
        {genecardsText}
      </a>
    )}
  </div>
</div>
